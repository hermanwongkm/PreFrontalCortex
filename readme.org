
* Setting up initial repo for git
** Command: yarn init 
*** This sets up the the package.json
** Command: git init
*** This sets up git into this folder 
** Command: git add .
*** This adds all the files in the current directory to the staging area
** Command:  git config --global user.email "herman_wong_km@outlook.com" and git config --global user.name hermanwongkm
*** sets up your git in the computer
** Command: git commit -m " message"
*** Commit your file with m representing message
** Command: git remote add origin <link>
*** This allows you to add the repo of github to this folder.
**** Can type git remote -v to check if it is updated.
** Command: git push origin master
*** This pushes it to master 
** Adding depedencies
*** yarn add express pg dotenv
**** These will add to your package.json
** Create .gitIgnore
*** Add files like node_modules so it will not be commited to your repo.

* Post Setup 
** I used https://github.com/michaeltreat/Windows-Subsystem-For-Linux-Setup-Guide/blob/master/readmes/installs/PostgreSQL.md to set up psql
*** .env file is used to contain enviromental variables
**** Add this .env file to your gitignore file, so your password never ends up on github.
**** require('dotenv').config() loads the dotenv library and call the config() method.
**** This will then load the keys in the .env file into process.env. You can print it out to check.
**** process.env is a global variable created my nodejs at runtime. And it represent the state of the system enviroment.
*** config.js is to used create the database connection
* NODEJs/JAVASCRIPT
** Export
*** module.export is a special object included in every js file in Node.js app by default
*** Export will exposes whatever you assigned to it as a module, be it a string object etc.
